/* generated by Svelte v3.32.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_component,
	claim_element,
	claim_space,
	claim_text,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from '/spa/web_modules/svelte/internal/index.mjs';

import ToggleTheme from '/spa/global/../components/toggleTheme.js';

function create_fragment(ctx) {
	let nav;
	let div;
	let a0;
	let t0;
	let t1;
	let span0;
	let toggletheme;
	let t2;
	let span1;
	let ul0;
	let li0;
	let t3;
	let t4;
	let li1;
	let a1;
	let t5;
	let t6;
	let li2;
	let a2;
	let t7;
	let t8;
	let ul1;
	let li3;
	let a3;
	let span2;
	let t9;
	let t10;
	let li4;
	let a4;
	let span3;
	let t11;
	let t12;
	let li5;
	let a5;
	let span4;
	let t13;
	let t14;
	let li6;
	let a6;
	let span5;
	let t15;
	let current;
	toggletheme = new ToggleTheme({});

	return {
		c() {
			nav = element("nav");
			div = element("div");
			a0 = element("a");
			t0 = text("PaperMod");
			t1 = space();
			span0 = element("span");
			create_component(toggletheme.$$.fragment);
			t2 = space();
			span1 = element("span");
			ul0 = element("ul");
			li0 = element("li");
			t3 = text("|");
			t4 = space();
			li1 = element("li");
			a1 = element("a");
			t5 = text("ðŸ‡«ðŸ‡·");
			t6 = space();
			li2 = element("li");
			a2 = element("a");
			t7 = text("Fa");
			t8 = space();
			ul1 = element("ul");
			li3 = element("li");
			a3 = element("a");
			span2 = element("span");
			t9 = text("Archive");
			t10 = space();
			li4 = element("li");
			a4 = element("a");
			span3 = element("span");
			t11 = text("Categories");
			t12 = space();
			li5 = element("li");
			a5 = element("a");
			span4 = element("span");
			t13 = text("Search");
			t14 = space();
			li6 = element("li");
			a6 = element("a");
			span5 = element("span");
			t15 = text("Tags");
			this.h();
		},
		l(nodes) {
			nav = claim_element(nodes, "NAV", { class: true });
			var nav_nodes = children(nav);
			div = claim_element(nav_nodes, "DIV", { class: true });
			var div_nodes = children(div);

			a0 = claim_element(div_nodes, "A", {
				href: true,
				accesskey: true,
				title: true,
				class: true
			});

			var a0_nodes = children(a0);
			t0 = claim_text(a0_nodes, "PaperMod");
			a0_nodes.forEach(detach);
			t1 = claim_space(div_nodes);
			span0 = claim_element(div_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			claim_component(toggletheme.$$.fragment, span0_nodes);
			span0_nodes.forEach(detach);
			t2 = claim_space(div_nodes);
			span1 = claim_element(div_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			ul0 = claim_element(span1_nodes, "UL", { class: true });
			var ul0_nodes = children(ul0);
			li0 = claim_element(ul0_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			t3 = claim_text(li0_nodes, "|");
			li0_nodes.forEach(detach);
			t4 = claim_space(ul0_nodes);
			li1 = claim_element(ul0_nodes, "LI", { class: true });
			var li1_nodes = children(li1);

			a1 = claim_element(li1_nodes, "A", {
				href: true,
				title: true,
				"aria-label": true,
				class: true
			});

			var a1_nodes = children(a1);
			t5 = claim_text(a1_nodes, "ðŸ‡«ðŸ‡·");
			a1_nodes.forEach(detach);
			li1_nodes.forEach(detach);
			t6 = claim_space(ul0_nodes);
			li2 = claim_element(ul0_nodes, "LI", { class: true });
			var li2_nodes = children(li2);

			a2 = claim_element(li2_nodes, "A", {
				href: true,
				title: true,
				"aria-label": true,
				class: true
			});

			var a2_nodes = children(a2);
			t7 = claim_text(a2_nodes, "Fa");
			a2_nodes.forEach(detach);
			li2_nodes.forEach(detach);
			ul0_nodes.forEach(detach);
			span1_nodes.forEach(detach);
			div_nodes.forEach(detach);
			t8 = claim_space(nav_nodes);
			ul1 = claim_element(nav_nodes, "UL", { id: true, onscroll: true, class: true });
			var ul1_nodes = children(ul1);
			li3 = claim_element(ul1_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			a3 = claim_element(li3_nodes, "A", { href: true, title: true, class: true });
			var a3_nodes = children(a3);
			span2 = claim_element(a3_nodes, "SPAN", {});
			var span2_nodes = children(span2);
			t9 = claim_text(span2_nodes, "Archive");
			span2_nodes.forEach(detach);
			a3_nodes.forEach(detach);
			li3_nodes.forEach(detach);
			t10 = claim_space(ul1_nodes);
			li4 = claim_element(ul1_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			a4 = claim_element(li4_nodes, "A", { href: true, title: true, class: true });
			var a4_nodes = children(a4);
			span3 = claim_element(a4_nodes, "SPAN", {});
			var span3_nodes = children(span3);
			t11 = claim_text(span3_nodes, "Categories");
			span3_nodes.forEach(detach);
			a4_nodes.forEach(detach);
			li4_nodes.forEach(detach);
			t12 = claim_space(ul1_nodes);
			li5 = claim_element(ul1_nodes, "LI", { class: true });
			var li5_nodes = children(li5);

			a5 = claim_element(li5_nodes, "A", {
				href: true,
				title: true,
				accesskey: true,
				class: true
			});

			var a5_nodes = children(a5);
			span4 = claim_element(a5_nodes, "SPAN", {});
			var span4_nodes = children(span4);
			t13 = claim_text(span4_nodes, "Search");
			span4_nodes.forEach(detach);
			a5_nodes.forEach(detach);
			li5_nodes.forEach(detach);
			t14 = claim_space(ul1_nodes);
			li6 = claim_element(ul1_nodes, "LI", { class: true });
			var li6_nodes = children(li6);
			a6 = claim_element(li6_nodes, "A", { href: true, title: true, class: true });
			var a6_nodes = children(a6);
			span5 = claim_element(a6_nodes, "SPAN", {});
			var span5_nodes = children(span5);
			t15 = claim_text(span5_nodes, "Tags");
			span5_nodes.forEach(detach);
			a6_nodes.forEach(detach);
			li6_nodes.forEach(detach);
			ul1_nodes.forEach(detach);
			nav_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(a0, "href", "/");
			attr(a0, "accesskey", "h");
			attr(a0, "title", "PaperMod (Alt + H)");
			attr(a0, "class", "logo svelte-5z702k");
			attr(span0, "class", "toggle svelte-5z702k");
			attr(li0, "class", " svelte-5z702k");
			attr(a1, "href", "/");
			attr(a1, "title", ":fr:");
			attr(a1, "aria-label", ":fr:");
			attr(a1, "class", "svelte-5z702k");
			attr(li1, "class", " svelte-5z702k");
			attr(a2, "href", "/");
			attr(a2, "title", "Fa");
			attr(a2, "aria-label", "Fa");
			attr(a2, "class", " svelte-5z702k");
			attr(li2, "class", " svelte-5z702k");
			attr(ul0, "class", "lang-switch isFlex");
			attr(span1, "class", "logo-switches");
			attr(div, "class", "logoSide isFlex svelte-5z702k");
			attr(a3, "href", "/archive");
			attr(a3, "title", "Archive");
			attr(a3, "class", "svelte-5z702k");
			attr(li3, "class", "svelte-5z702k");
			attr(a4, "href", "/categories");
			attr(a4, "title", "Categories");
			attr(a4, "class", "svelte-5z702k");
			attr(li4, "class", "svelte-5z702k");
			attr(a5, "href", "/search");
			attr(a5, "title", "Search (Alt + /)");
			attr(a5, "accesskey", "/");
			attr(a5, "class", "svelte-5z702k");
			attr(li5, "class", "svelte-5z702k");
			attr(a6, "href", "/tags");
			attr(a6, "title", "Tags");
			attr(a6, "class", "svelte-5z702k");
			attr(li6, "class", "svelte-5z702k");
			attr(ul1, "id", "menu");
			attr(ul1, "onscroll", "menu_on_scroll()");
			attr(ul1, "class", "menu isFlex svelte-5z702k");
			attr(nav, "class", "isFlex seven columns svelte-5z702k");
		},
		m(target, anchor) {
			insert(target, nav, anchor);
			append(nav, div);
			append(div, a0);
			append(a0, t0);
			append(div, t1);
			append(div, span0);
			mount_component(toggletheme, span0, null);
			append(div, t2);
			append(div, span1);
			append(span1, ul0);
			append(ul0, li0);
			append(li0, t3);
			append(ul0, t4);
			append(ul0, li1);
			append(li1, a1);
			append(a1, t5);
			append(ul0, t6);
			append(ul0, li2);
			append(li2, a2);
			append(a2, t7);
			append(nav, t8);
			append(nav, ul1);
			append(ul1, li3);
			append(li3, a3);
			append(a3, span2);
			append(span2, t9);
			append(ul1, t10);
			append(ul1, li4);
			append(li4, a4);
			append(a4, span3);
			append(span3, t11);
			append(ul1, t12);
			append(ul1, li5);
			append(li5, a5);
			append(a5, span4);
			append(span4, t13);
			append(ul1, t14);
			append(ul1, li6);
			append(li6, a6);
			append(a6, span5);
			append(span5, t15);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(toggletheme.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(toggletheme.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(nav);
			destroy_component(toggletheme);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;