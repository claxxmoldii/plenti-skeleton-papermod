/* generated by Svelte v3.32.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	svg_element
} from '/spa/web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let button;
	let svg;
	let circle;
	let line0;
	let line1;
	let line2;
	let line3;
	let line4;
	let line5;
	let line6;
	let line7;

	return {
		c() {
			button = element("button");
			svg = svg_element("svg");
			circle = svg_element("circle");
			line0 = svg_element("line");
			line1 = svg_element("line");
			line2 = svg_element("line");
			line3 = svg_element("line");
			line4 = svg_element("line");
			line5 = svg_element("line");
			line6 = svg_element("line");
			line7 = svg_element("line");
			this.h();
		},
		l(nodes) {
			button = claim_element(nodes, "BUTTON", {
				id: true,
				accesskey: true,
				title: true,
				class: true
			});

			var button_nodes = children(button);

			svg = claim_element(
				button_nodes,
				"svg",
				{
					id: true,
					xmlns: true,
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					stroke: true,
					"stroke-width": true,
					"stroke-linecap": true,
					"stroke-linejoin": true
				},
				1
			);

			var svg_nodes = children(svg);
			circle = claim_element(svg_nodes, "circle", { cx: true, cy: true, r: true }, 1);
			children(circle).forEach(detach);
			line0 = claim_element(svg_nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line0).forEach(detach);
			line1 = claim_element(svg_nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line1).forEach(detach);
			line2 = claim_element(svg_nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line2).forEach(detach);
			line3 = claim_element(svg_nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line3).forEach(detach);
			line4 = claim_element(svg_nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line4).forEach(detach);
			line5 = claim_element(svg_nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line5).forEach(detach);
			line6 = claim_element(svg_nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line6).forEach(detach);
			line7 = claim_element(svg_nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line7).forEach(detach);
			svg_nodes.forEach(detach);
			button_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(circle, "cx", "12");
			attr(circle, "cy", "12");
			attr(circle, "r", "5");
			attr(line0, "x1", "12");
			attr(line0, "y1", "1");
			attr(line0, "x2", "12");
			attr(line0, "y2", "3");
			attr(line1, "x1", "12");
			attr(line1, "y1", "21");
			attr(line1, "x2", "12");
			attr(line1, "y2", "23");
			attr(line2, "x1", "4.22");
			attr(line2, "y1", "4.22");
			attr(line2, "x2", "5.64");
			attr(line2, "y2", "5.64");
			attr(line3, "x1", "18.36");
			attr(line3, "y1", "18.36");
			attr(line3, "x2", "19.78");
			attr(line3, "y2", "19.78");
			attr(line4, "x1", "1");
			attr(line4, "y1", "12");
			attr(line4, "x2", "3");
			attr(line4, "y2", "12");
			attr(line5, "x1", "21");
			attr(line5, "y1", "12");
			attr(line5, "x2", "23");
			attr(line5, "y2", "12");
			attr(line6, "x1", "4.22");
			attr(line6, "y1", "19.78");
			attr(line6, "x2", "5.64");
			attr(line6, "y2", "18.36");
			attr(line7, "x1", "18.36");
			attr(line7, "y1", "5.64");
			attr(line7, "x2", "19.78");
			attr(line7, "y2", "4.22");
			attr(svg, "id", "sun");
			attr(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr(svg, "width", "24");
			attr(svg, "height", "24");
			attr(svg, "viewBox", "0 0 24 24");
			attr(svg, "fill", "none");
			attr(svg, "stroke", "currentcolor");
			attr(svg, "stroke-width", "2");
			attr(svg, "stroke-linecap", "round");
			attr(svg, "stroke-linejoin", "round");
			attr(button, "id", "theme-toggle");
			attr(button, "accesskey", "t");
			attr(button, "title", "(Alt + T)");
			attr(button, "class", "svelte-12d5nqh");
		},
		m(target, anchor) {
			insert(target, button, anchor);
			append(button, svg);
			append(svg, circle);
			append(svg, line0);
			append(svg, line1);
			append(svg, line2);
			append(svg, line3);
			append(svg, line4);
			append(svg, line5);
			append(svg, line6);
			append(svg, line7);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(button);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;