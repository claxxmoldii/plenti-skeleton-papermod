/* generated by Svelte v3.32.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from '/spa/web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let article;
	let header;
	let h1;
	let t0;
	let t1;
	let section;
	let p;
	let t2;
	let t3;
	let ul;
	let li0;
	let strong;
	let t4;
	let t5;
	let t6;
	let li1;
	let t7;
	let t8;
	let li2;
	let t9;
	let t10_value = " " + "";
	let t10;
	let t11;
	let a0;
	let t12;
	let t13;
	let t14;
	let div;
	let a1;
	let img0;
	let img0_src_value;
	let t15;
	let a2;
	let img1;
	let img1_src_value;
	let t16;
	let a3;
	let img2;
	let img2_src_value;

	return {
		c() {
			article = element("article");
			header = element("header");
			h1 = element("h1");
			t0 = text(/*siteName*/ ctx[0]);
			t1 = space();
			section = element("section");
			p = element("p");
			t2 = text("Welcome to demo of hugoâ€™s theme PaperMod.");
			t3 = space();
			ul = element("ul");
			li0 = element("li");
			strong = element("strong");
			t4 = text("PaperMod");
			t5 = text(" is a simple but fast and responsive theme with\n        useful feature-set that enhances UX.");
			t6 = space();
			li1 = element("li");
			t7 = text("Do give a ðŸŒŸ on Github !");
			t8 = space();
			li2 = element("li");
			t9 = text("PaperMod is based on theme");
			t10 = text(t10_value);
			t11 = space();
			a0 = element("a");
			t12 = text("Paper");
			t13 = text(".");
			t14 = space();
			div = element("div");
			a1 = element("a");
			img0 = element("img");
			t15 = space();
			a2 = element("a");
			img1 = element("img");
			t16 = space();
			a3 = element("a");
			img2 = element("img");
			this.h();
		},
		l(nodes) {
			article = claim_element(nodes, "ARTICLE", { class: true });
			var article_nodes = children(article);
			header = claim_element(article_nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			h1 = claim_element(header_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, /*siteName*/ ctx[0]);
			h1_nodes.forEach(detach);
			header_nodes.forEach(detach);
			t1 = claim_space(article_nodes);
			section = claim_element(article_nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			p = claim_element(section_nodes, "P", { class: true });
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, "Welcome to demo of hugoâ€™s theme PaperMod.");
			p_nodes.forEach(detach);
			t3 = claim_space(section_nodes);
			ul = claim_element(section_nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			strong = claim_element(li0_nodes, "STRONG", {});
			var strong_nodes = children(strong);
			t4 = claim_text(strong_nodes, "PaperMod");
			strong_nodes.forEach(detach);
			t5 = claim_text(li0_nodes, " is a simple but fast and responsive theme with\n        useful feature-set that enhances UX.");
			li0_nodes.forEach(detach);
			t6 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			t7 = claim_text(li1_nodes, "Do give a ðŸŒŸ on Github !");
			li1_nodes.forEach(detach);
			t8 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			t9 = claim_text(li2_nodes, "PaperMod is based on theme");
			t10 = claim_text(li2_nodes, t10_value);
			t11 = claim_space(li2_nodes);
			a0 = claim_element(li2_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			t12 = claim_text(a0_nodes, "Paper");
			a0_nodes.forEach(detach);
			t13 = claim_text(li2_nodes, ".");
			li2_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			section_nodes.forEach(detach);
			t14 = claim_space(article_nodes);
			div = claim_element(article_nodes, "DIV", { class: true });
			var div_nodes = children(div);

			a1 = claim_element(div_nodes, "A", {
				href: true,
				target: true,
				rel: true,
				title: true,
				class: true
			});

			var a1_nodes = children(a1);
			img0 = claim_element(a1_nodes, "IMG", { src: true, alt: true });
			a1_nodes.forEach(detach);
			t15 = claim_space(div_nodes);

			a2 = claim_element(div_nodes, "A", {
				href: true,
				target: true,
				rel: true,
				title: true,
				class: true
			});

			var a2_nodes = children(a2);
			img1 = claim_element(a2_nodes, "IMG", { src: true, alt: true });
			a2_nodes.forEach(detach);
			t16 = claim_space(div_nodes);

			a3 = claim_element(div_nodes, "A", {
				href: true,
				target: true,
				rel: true,
				title: true,
				class: true
			});

			var a3_nodes = children(a3);
			img2 = claim_element(a3_nodes, "IMG", { src: true, alt: true });
			a3_nodes.forEach(detach);
			div_nodes.forEach(detach);
			article_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h1, "class", "siteName  svelte-1468kca");
			attr(header, "class", "entry-header");
			attr(p, "class", "svelte-1468kca");
			attr(li0, "class", "svelte-1468kca");
			attr(li1, "class", "svelte-1468kca");
			attr(a0, "href", "https://github.com/nanxiaobei/hugo-paper");
			attr(a0, "class", "svelte-1468kca");
			attr(li2, "class", "svelte-1468kca");
			attr(ul, "class", "isListStyledNon");
			attr(section, "class", "entry-content svelte-1468kca");
			if (img0.src !== (img0_src_value = "../assets/icons/githubicon-26px.png")) attr(img0, "src", img0_src_value);
			attr(img0, "alt", "github");
			attr(a1, "href", "https://github.com/adityatelange/hugo-PaperMod");
			attr(a1, "target", "_blank");
			attr(a1, "rel", "noopener noreferrer me");
			attr(a1, "title", "Github");
			attr(a1, "class", " svelte-1468kca");
			if (img1.src !== (img1_src_value = "../assets/icons/ko-fi-26px.png")) attr(img1, "src", img1_src_value);
			attr(img1, "alt", "ko-fi");
			attr(a2, "href", "https://ko-fi.com/adityatelange");
			attr(a2, "target", "_blank");
			attr(a2, "rel", "noopener noreferrer me");
			attr(a2, "title", "Ko fi");
			attr(a2, "class", " svelte-1468kca");
			if (img2.src !== (img2_src_value = "../assets/icons/rss-26px.png")) attr(img2, "src", img2_src_value);
			attr(img2, "alt", "rss feed");
			attr(a3, "href", "index.xml");
			attr(a3, "target", "_blank");
			attr(a3, "rel", "noopener noreferrer me");
			attr(a3, "title", "Rss");
			attr(a3, "class", "svelte-1468kca");
			attr(div, "class", "social-icons");
			attr(article, "class", "first-entry home-info");
		},
		m(target, anchor) {
			insert(target, article, anchor);
			append(article, header);
			append(header, h1);
			append(h1, t0);
			append(article, t1);
			append(article, section);
			append(section, p);
			append(p, t2);
			append(section, t3);
			append(section, ul);
			append(ul, li0);
			append(li0, strong);
			append(strong, t4);
			append(li0, t5);
			append(ul, t6);
			append(ul, li1);
			append(li1, t7);
			append(ul, t8);
			append(ul, li2);
			append(li2, t9);
			append(li2, t10);
			append(li2, t11);
			append(li2, a0);
			append(a0, t12);
			append(li2, t13);
			append(article, t14);
			append(article, div);
			append(div, a1);
			append(a1, img0);
			append(div, t15);
			append(div, a2);
			append(a2, img1);
			append(div, t16);
			append(div, a3);
			append(a3, img2);
		},
		p(ctx, [dirty]) {
			if (dirty & /*siteName*/ 1) set_data(t0, /*siteName*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(article);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { siteName } = $$props;

	$$self.$$set = $$props => {
		if ("siteName" in $$props) $$invalidate(0, siteName = $$props.siteName);
	};

	return [siteName];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { siteName: 0 });
	}
}

export default Component;