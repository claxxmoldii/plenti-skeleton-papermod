/* generated by Svelte v3.32.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space,
	text
} from '/spa/web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let ul;
	let li0;
	let t0;
	let sup0;
	let t1;
	let t2;
	let li1;
	let t3;
	let sup1;
	let t4;
	let t5;
	let li2;
	let t6;
	let sup2;
	let t7;
	let t8;
	let li3;
	let t9;
	let sup3;
	let t10;
	let t11;
	let li4;
	let t12;
	let sup4;
	let t13;
	let t14;
	let li5;
	let t15;
	let sup5;
	let t16;
	let t17;
	let li6;
	let t18;
	let sup6;
	let t19;
	let t20;
	let li7;
	let t21;
	let sup7;
	let t22;
	let t23;
	let li8;
	let t24;
	let sup8;
	let t25;

	return {
		c() {
			ul = element("ul");
			li0 = element("li");
			t0 = text("tokyo");
			sup0 = element("sup");
			t1 = text("3");
			t2 = space();
			li1 = element("li");
			t3 = text("nagoya");
			sup1 = element("sup");
			t4 = text("4");
			t5 = space();
			li2 = element("li");
			t6 = text("yokohama");
			sup2 = element("sup");
			t7 = text("1");
			t8 = space();
			li3 = element("li");
			t9 = text("kyoto");
			sup3 = element("sup");
			t10 = text("1");
			t11 = space();
			li4 = element("li");
			t12 = text("sapporo");
			sup4 = element("sup");
			t13 = text("1");
			t14 = space();
			li5 = element("li");
			t15 = text("specialty");
			sup5 = element("sup");
			t16 = text("4");
			t17 = space();
			li6 = element("li");
			t18 = text("hekinan");
			sup6 = element("sup");
			t19 = text("1");
			t20 = space();
			li7 = element("li");
			t21 = text("kissaten");
			sup7 = element("sup");
			t22 = text("1");
			t23 = space();
			li8 = element("li");
			t24 = text("starbucks");
			sup8 = element("sup");
			t25 = text("1");
			this.h();
		},
		l(nodes) {
			ul = claim_element(nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			t0 = claim_text(li0_nodes, "tokyo");
			sup0 = claim_element(li0_nodes, "SUP", { class: true });
			var sup0_nodes = children(sup0);
			t1 = claim_text(sup0_nodes, "3");
			sup0_nodes.forEach(detach);
			li0_nodes.forEach(detach);
			t2 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			t3 = claim_text(li1_nodes, "nagoya");
			sup1 = claim_element(li1_nodes, "SUP", { class: true });
			var sup1_nodes = children(sup1);
			t4 = claim_text(sup1_nodes, "4");
			sup1_nodes.forEach(detach);
			li1_nodes.forEach(detach);
			t5 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			t6 = claim_text(li2_nodes, "yokohama");
			sup2 = claim_element(li2_nodes, "SUP", { class: true });
			var sup2_nodes = children(sup2);
			t7 = claim_text(sup2_nodes, "1");
			sup2_nodes.forEach(detach);
			li2_nodes.forEach(detach);
			t8 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			t9 = claim_text(li3_nodes, "kyoto");
			sup3 = claim_element(li3_nodes, "SUP", { class: true });
			var sup3_nodes = children(sup3);
			t10 = claim_text(sup3_nodes, "1");
			sup3_nodes.forEach(detach);
			li3_nodes.forEach(detach);
			t11 = claim_space(ul_nodes);
			li4 = claim_element(ul_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			t12 = claim_text(li4_nodes, "sapporo");
			sup4 = claim_element(li4_nodes, "SUP", { class: true });
			var sup4_nodes = children(sup4);
			t13 = claim_text(sup4_nodes, "1");
			sup4_nodes.forEach(detach);
			li4_nodes.forEach(detach);
			t14 = claim_space(ul_nodes);
			li5 = claim_element(ul_nodes, "LI", { class: true });
			var li5_nodes = children(li5);
			t15 = claim_text(li5_nodes, "specialty");
			sup5 = claim_element(li5_nodes, "SUP", { class: true });
			var sup5_nodes = children(sup5);
			t16 = claim_text(sup5_nodes, "4");
			sup5_nodes.forEach(detach);
			li5_nodes.forEach(detach);
			t17 = claim_space(ul_nodes);
			li6 = claim_element(ul_nodes, "LI", { class: true });
			var li6_nodes = children(li6);
			t18 = claim_text(li6_nodes, "hekinan");
			sup6 = claim_element(li6_nodes, "SUP", { class: true });
			var sup6_nodes = children(sup6);
			t19 = claim_text(sup6_nodes, "1");
			sup6_nodes.forEach(detach);
			li6_nodes.forEach(detach);
			t20 = claim_space(ul_nodes);
			li7 = claim_element(ul_nodes, "LI", { class: true });
			var li7_nodes = children(li7);
			t21 = claim_text(li7_nodes, "kissaten");
			sup7 = claim_element(li7_nodes, "SUP", { class: true });
			var sup7_nodes = children(sup7);
			t22 = claim_text(sup7_nodes, "1");
			sup7_nodes.forEach(detach);
			li7_nodes.forEach(detach);
			t23 = claim_space(ul_nodes);
			li8 = claim_element(ul_nodes, "LI", { class: true });
			var li8_nodes = children(li8);
			t24 = claim_text(li8_nodes, "starbucks");
			sup8 = claim_element(li8_nodes, "SUP", { class: true });
			var sup8_nodes = children(sup8);
			t25 = claim_text(sup8_nodes, "1");
			sup8_nodes.forEach(detach);
			li8_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(sup0, "class", "svelte-uy6qib");
			attr(li0, "class", "svelte-uy6qib");
			attr(sup1, "class", "svelte-uy6qib");
			attr(li1, "class", "svelte-uy6qib");
			attr(sup2, "class", "svelte-uy6qib");
			attr(li2, "class", "svelte-uy6qib");
			attr(sup3, "class", "svelte-uy6qib");
			attr(li3, "class", "svelte-uy6qib");
			attr(sup4, "class", "svelte-uy6qib");
			attr(li4, "class", "svelte-uy6qib");
			attr(sup5, "class", "svelte-uy6qib");
			attr(li5, "class", "svelte-uy6qib");
			attr(sup6, "class", "svelte-uy6qib");
			attr(li6, "class", "svelte-uy6qib");
			attr(sup7, "class", "svelte-uy6qib");
			attr(li7, "class", "svelte-uy6qib");
			attr(sup8, "class", "svelte-uy6qib");
			attr(li8, "class", "svelte-uy6qib");
			attr(ul, "class", "svelte-uy6qib");
		},
		m(target, anchor) {
			insert(target, ul, anchor);
			append(ul, li0);
			append(li0, t0);
			append(li0, sup0);
			append(sup0, t1);
			append(ul, t2);
			append(ul, li1);
			append(li1, t3);
			append(li1, sup1);
			append(sup1, t4);
			append(ul, t5);
			append(ul, li2);
			append(li2, t6);
			append(li2, sup2);
			append(sup2, t7);
			append(ul, t8);
			append(ul, li3);
			append(li3, t9);
			append(li3, sup3);
			append(sup3, t10);
			append(ul, t11);
			append(ul, li4);
			append(li4, t12);
			append(li4, sup4);
			append(sup4, t13);
			append(ul, t14);
			append(ul, li5);
			append(li5, t15);
			append(li5, sup5);
			append(sup5, t16);
			append(ul, t17);
			append(ul, li6);
			append(li6, t18);
			append(li6, sup6);
			append(sup6, t19);
			append(ul, t20);
			append(ul, li7);
			append(li7, t21);
			append(li7, sup7);
			append(sup7, t22);
			append(ul, t23);
			append(ul, li8);
			append(li8, t24);
			append(li8, sup8);
			append(sup8, t25);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(ul);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;